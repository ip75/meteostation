version: "3.9"

services:
  pg:
    container_name: postgres
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: meteostation
      POSTGRES_USER: meteostation
      POSTGRES_PASSWORD: meteostation
      PGDATA: /postgres/data
    volumes:
      - pgdata:/postgres/data
    
  meteostation:
    container_name: meteostation
    image: meteostation:latest
    hostname: meteostation
    restart: on-failure
    depends_on:
      - pg
      - redis
    ports:
      - 80:63000
      - 10000:65000
      - 20000:63000
    environment:
      POSTGRES_DB: meteostation
      POSTGRES_USER: meteostation
      POSTGRES_PASSWORD: meteostation
      POSTGRES_HOST: pg
    build:
      context: ./
      dockerfile: ./Dockerfile

  redis:
    image: redis:alpine
    container_name: redis
    hostname: redis
    ports:
      - 6379:6379
    volumes:
      - ./redis-data:/data:rw
    deploy:
      restart_policy:
        condition: on-failure

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    environment:
      # increases the log level from info to debug
      - GF_LOG_LEVEL=debug
    ports:
      - '3000:3000'
    volumes:
      - '.grafana/storage:/var/lib/grafana'
networks:
  default:
    name: meteostation-net

volumes:
  pgdata:
#    driver: local
  rdata:
#    driver: local
